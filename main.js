!function(){"use strict";var e={717:function(e,t,s){e.exports=s.p+"a086f758840ae814ecde.svg"}},t={};function s(r){var o=t[r];if(void 0!==o)return o.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,s),n.exports}s.p="",function(){var e=s(717);function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class r{constructor(e,s,r,o,n,i){t(this,"likeCard",(e=>{this._likes=e.likes,this._element.querySelector(".heart").classList.add("heart_active"),this._likesCounter.textContent=e.likes.length})),t(this,"removeLike",(e=>{this._likes=e.likes,this._element.querySelector(".heart").classList.remove("heart_active"),this._likesCounter.textContent=e.likes.length})),this._text=e.name,this._link=e.link,this._id=e._id,this._likes=e.likes,this._likesCount=e.likes.length,this._owner=e.owner._id,this._user=s,this._template=document.getElementById(r),this._handleCardClick=o,this._handleDeleteCard=n,this._handleLikeButton=i}_getCardData(){return this._template.content.querySelector(".photos-grid__card").cloneNode(!0)}isCardLiked(){return this._likes.some((e=>e._id===this._user))}generateCard(){return this._element=this._getCardData(),this._cardPhoto=this._element.querySelector(".photos-grid__photo"),this._cardCaption=this._element.querySelector(".photos-grid__location"),this._likesCounter=this._element.querySelector(".photos-grid__like-counter"),this._trashIcon=this._element.querySelector(".photos-grid__trash"),this._likesCounter.textContent=this._likesCount,this._cardPhoto.src=this._link,this._cardPhoto.alt=this._text,this._cardCaption.textContent=this._text,this._owner!==this._user&&this._trashIcon.classList.add("photos-grid__trash_disables"),this.isCardLiked()&&this._element.querySelector(".heart").classList.add("heart_active"),this._setEventListeners(),this._element}deleteCard(){this._element.remove(),this._element=null}_setEventListeners(){this._element.querySelector(".heart").addEventListener("click",(()=>this._handleLikeButton(this._id))),this._element.querySelector(".photos-grid__trash").addEventListener("click",(()=>this._handleDeleteCard(this._id))),this._element.querySelector(".photos-grid__photo").addEventListener("click",this._handleCardClick)}}class o{constructor(e,t){this._config=e,this._form=document.querySelector(t)}enableValidation(){this._inputList=[...this._form.querySelectorAll(this._config.inputSelector)],this._buttonElement=this._form.querySelector(this._config.submitButtonSelector),this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e),this._toggleButtonState()})),this._form.reset()}_showInputError(e){const t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._config.inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._config.errorClass)}_hideInputError(e){const t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._config.inputErrorClass),t.classList.remove(this._config.errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._config.inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._config.inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}}function n(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class i{constructor(e){n(this,"_handleEscClose",(e=>{"Escape"===e.key&&this._popup.classList.remove("popup_opened")})),n(this,"_handleClickOverlayClose",(e=>{e.target==e.currentTarget&&this.close()})),this._popup=document.querySelector(e)}open(){this._popup.classList.add("popup_opened"),this._popup.addEventListener("mousedown",this._handleClickOverlayClose),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_opened"),this._popup.removeEventListener("mousedown",this._handleClickOverlayClose),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popup.querySelector(".popup__close-button").addEventListener("click",(()=>this.close()))}}class a extends i{constructor(e,t){super(e),this._handleFormSubmit=t}_getInputValues(){const e={};return this._popup.querySelectorAll(".popup__input").forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm=this._popup.querySelector(".popup__form"),this._popupForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._popup.querySelector(".popup__save-button");this._handleFormSubmit(this._getInputValues(),t)}))}close(){this._popupForm.reset(),super.close()}}const h={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_inactive",inputErrorClass:"popup__input_state_error",errorClass:"popup__input-error_active"},_=new class extends i{getMessage(e,t){this._messageField=this._popup.querySelector(e),this._messageField.textContent=t}setEventListeners(){super.setEventListeners(),this._popupForm=this._popup.querySelector(".popup__form"),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this.close()}))}}(".popup_type_error");_.setEventListeners();const p=new class{constructor(e,t){let{baseUrl:s,headers:r,errorFunction:o}=t;this._customFetch=e,this._errorFunction=o,this._baseUrl=s,this._headers=r}getInitialCards(){return this._customFetch("".concat(this._baseUrl,"/cards"),{headers:this._headers},this._errorFunction)}getUserInfo(){return this._customFetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers},this._errorFunction)}updateUserInfo(e){return this._customFetch("".concat(this._baseUrl,"/usrs/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})},this._errorFunction)}setNewCard(e){return this._customFetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})},this._errorFunction)}deleteCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers},this._errorFunction)}addLike(e){return this._customFetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers},this._errorFunction)}removeLike(e){return this._customFetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers},this._errorFunction)}setUserAvatar(e){return this._customFetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})},this._errorFunction)}}(((e,t,s)=>fetch(e,t).then((e=>e.ok?e.json():Promise.reject(e.statusText))).catch((e=>{console.log(e),s(e)}))),{baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"3e63b17a-6497-4226-90cf-4d7937b7aba1","Content-Type":"application/json"},errorFunction:e=>{_.getMessage(".popup__text",e),_.open()}}),c=document.getElementById("profile-avatar");document.getElementById("profile-avatar-edit").src=e;const u=new class{constructor(e,t,s,r){this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(t),this._formNameInput=document.querySelector(s),this._formJobInput=document.querySelector(r)}getUserInfo(){return{name:this._nameElement.textContent,about:this._jobElement.textContent}}setUserInfo(e){this._formNameInput.value=e.name,this._formJobInput.value=e.about,this._nameElement.textContent=e.name,this._jobElement.textContent=e.about}}(".profile__name",".profile__title",".popup__input_type_name",".popup__input_type_job");let l;Promise.all([p.getUserInfo(),p.getInitialCards()]).then((e=>{let[t,s]=e;l=t._id;const r={name:t.name,about:t.about};u.setUserInfo(r),c.style.backgroundImage="url(".concat(t.avatar,")"),b.renderer(s)}));const d=new a(".popup_type_edit-profile",((e,t)=>{t.textContent="Saving...",p.updateUserInfo(e).then((e=>u.setUserInfo(e))).then(d.close()).then(t.textContent="Save")}));d.setEventListeners();const m=new o(h,".popup__form_type_edit-profile");m.enableValidation(),document.querySelector(".profile__edit-button").addEventListener("click",(()=>{m.resetValidation(),u.setUserInfo(u.getUserInfo()),d.open()}));const v=new a(".popup_type_edit-avatar",((e,t)=>{t.textContent="Saving...",p.setUserAvatar(e).then((e=>{c.style.backgroundImage="url(".concat(e.avatar,")")})).then(v.close()).then(t.textContent="Save")}));v.setEventListeners();const g=new o(h,".popup__form_type_edit-avatar");g.enableValidation(),document.querySelector(".profile__avatar-cover").addEventListener("click",(()=>{g.resetValidation(),v.open()}));const C=new class extends i{constructor(e,t,s){super(e),this._source=t,this._caption=s}open(e){super.open(),this._source=e.link,this._caption=e.name,this._popupImage=this._popup.querySelector(".picture-popup__popup-image"),this._popupCaption=this._popup.querySelector(".picture-popup__popup-text"),this._popupImage.src=this._source,this._popupImage.alt=this._caption,this._popupCaption.textContent=this._caption}}(".picture-popup"," "," ");C.setEventListeners();const f=new class extends i{getTask(e){this._handleFormSubmit=e}setEventListeners(){super.setEventListeners(),this._popupForm=this._popup.querySelector(".popup__form"),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(),this.close()}))}}(".popup_type_delete-card");f.setEventListeners();const E=e=>{const t=new r(e,l,"card-template",(()=>{C.open(e)}),(e=>{f.open(),f.getTask((()=>{p.deleteCard(e),t.deleteCard()}))}),(e=>{t.isCardLiked()?p.removeLike(e).then((e=>{t.removeLike(e)})):p.addLike(e).then((e=>{t.likeCard(e)}))})),s=t.generateCard();b.addItem(s)},b=new class{constructor(e,t){this._renderItem=e,this._container=document.querySelector(t)}renderer(e){e.forEach((e=>{this._renderItem(e)}))}addItem(e){this._container.prepend(e)}}(E,".photos-grid__list"),y=new a(".popup_type_add-card",((e,t)=>{t.textContent="Creating...",p.setNewCard(e).then((e=>{E(e)})).then(y.close()).then(t.textContent="Create")}));y.setEventListeners(),document.querySelector(".profile__add-button").addEventListener("click",(()=>{L.resetValidation(),y.open()}));const L=new o(h,".popup__form_type_add-card");L.enableValidation()}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,