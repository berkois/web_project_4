!function(){"use strict";var e={717:function(e,t,s){e.exports=s.p+"a086f758840ae814ecde.svg"}},t={};function s(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,s),i.exports}s.p="",function(){var e=s(717);function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class r{constructor(e,s,r,o,i,n){t(this,"likeCard",(e=>{this._likes=e.likes,this._element.querySelector(".heart").classList.add("heart_active"),this._likesCounter.textContent=e.likes.length})),t(this,"removeLike",(e=>{this._likes=e.likes,this._element.querySelector(".heart").classList.remove("heart_active"),this._likesCounter.textContent=e.likes.length})),this._text=e.name,this._link=e.link,this._id=e._id,this._likes=e.likes,this._likesCount=e.likes.length,this._owner=e.owner._id,this._user=s,this._template=document.getElementById(r),this._handleCardClick=o,this._handleDeleteCard=i,this._handleLikeButton=n}_getCardData(){return this._template.content.querySelector(".photos-grid__card").cloneNode(!0)}isCardLiked(){return this._likes.some((e=>e._id===this._user))}generateCard(){return this._element=this._getCardData(),this._cardPhoto=this._element.querySelector(".photos-grid__photo"),this._cardCaption=this._element.querySelector(".photos-grid__location"),this._likesCounter=this._element.querySelector(".photos-grid__like-counter"),this._trashIcon=this._element.querySelector(".photos-grid__trash"),this._likesCounter.textContent=this._likesCount,this._cardPhoto.src=this._link,this._cardPhoto.alt=this._text,this._cardCaption.textContent=this._text,this._owner!==this._user&&this._trashIcon.classList.add("photos-grid__trash_disables"),this.isCardLiked()&&this._element.querySelector(".heart").classList.add("heart_active"),this._setEventListeners(),this._element}deleteCard(){this._element.remove(),this._element=null}_setEventListeners(){this._element.querySelector(".heart").addEventListener("click",(()=>this._handleLikeButton(this._id))),this._element.querySelector(".photos-grid__trash").addEventListener("click",(()=>this._handleDeleteCard(this._id))),this._element.querySelector(".photos-grid__photo").addEventListener("click",this._handleCardClick)}}class o{constructor(e,t){this._config=e,this._form=document.querySelector(t)}enableValidation(){this._inputList=[...this._form.querySelectorAll(this._config.inputSelector)],this._buttonElement=this._form.querySelector(this._config.submitButtonSelector),this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputList.forEach((e=>{this._hideInputError(e),this._toggleButtonState()})),this._form.reset()}_showInputError(e){const t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._config.inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._config.errorClass)}_hideInputError(e){const t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._config.inputErrorClass),t.classList.remove(this._config.errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._config.inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._config.inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}}function i(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class n{constructor(e){i(this,"_handleEscClose",(e=>{"Escape"===e.key&&this._popup.classList.remove("popup_opened")})),i(this,"_handleClickOverlayClose",(e=>{e.target==e.currentTarget&&this.close()})),this._popup=document.querySelector(e)}open(){this._popup.classList.add("popup_opened"),this._popup.addEventListener("mousedown",this._handleClickOverlayClose),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_opened"),this._popup.removeEventListener("mousedown",this._handleClickOverlayClose),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popup.querySelector(".popup__close-button").addEventListener("click",(()=>this.close()))}}class a extends n{constructor(e,t){var s,r;super(e),r=e=>{e.preventDefault();const t=e.target.querySelector(".popup__save-button");t.textContent="Saving...",this._actionsForSubmit(this._getInputValues(),t)},(s="_handleFormSubmit")in this?Object.defineProperty(this,s,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[s]=r,this._actionsForSubmit=t}_getInputValues(){const e={};return this._popup.querySelectorAll(".popup__input").forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm=this._popup.querySelector(".popup__form"),this._popupForm.addEventListener("submit",this._handleFormSubmit)}close(){this._popupForm.reset(),super.close()}}const _={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_inactive",inputErrorClass:"popup__input_state_error",errorClass:"popup__input-error_active"},c=document.getElementById("profile-avatar-edit"),h=document.querySelector(".profile__edit-button"),u=document.querySelector(".profile__avatar-cover"),p=document.querySelector(".profile__add-button"),l=new class extends n{getMessage(e,t){this._messageField=this._popup.querySelector(e),this._messageField.textContent=t}setEventListeners(){super.setEventListeners(),this._popupForm=this._popup.querySelector(".popup__form"),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this.close()}))}}(".popup_type_error");l.setEventListeners();const d=new class{constructor(e,t){let{baseUrl:s,headers:r,errorFunction:o}=t;this._customFetch=e,this._errorFunction=o,this._baseUrl=s,this._headers=r}getInitialCards(){return this._customFetch("".concat(this._baseUrl,"/cards"),{headers:this._headers},this._errorFunction)}getUserInfo(){return this._customFetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers},this._errorFunction)}updateUserInfo(e){return this._customFetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})},this._errorFunction)}setNewCard(e){return this._customFetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})},this._errorFunction)}deleteCard(e){return this._customFetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers},this._errorFunction)}addLike(e){return this._customFetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers},this._errorFunction)}removeLike(e){return this._customFetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers},this._errorFunction)}setUserAvatar(e){return this._customFetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})},this._errorFunction)}}(((e,t,s)=>fetch(e,t).then((e=>e.ok?e.json():Promise.reject(e.status))).catch((e=>{console.log("error: status code ".concat(e,".")),s("error: status code ".concat(e,"."))}))),{baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"3e63b17a-6497-4226-90cf-4d7937b7aba1","Content-Type":"application/json"},errorFunction:e=>{l.getMessage(".popup__text",e),l.open()}});c.src=e;const m=new class{constructor(e,t,s,r,o,i){this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(t),this._avatarElement=document.querySelector(s),this._formNameInput=document.querySelector(r),this._formJobInput=document.querySelector(o),this._formAvatarInput=document.querySelector(i)}getUserInfo(){return{name:this._nameElement.textContent,about:this._jobElement.textContent}}setUserInfo(e){this._formNameInput.value=e.name,this._formJobInput.value=e.about,this._nameElement.textContent=e.name,this._jobElement.textContent=e.about}setUserAvatar(e){this._avatarElement.style.backgroundImage="url(".concat(e,")")}}(".profile__name",".profile__title",".profile__avatar",".popup__input_type_name",".popup__input_type_job","popup__input_type_avatar-src");let v;Promise.all([d.getUserInfo(),d.getInitialCards()]).then((e=>{let[t,s]=e;v=t._id,m.setUserInfo(t),m.setUserAvatar(t.avatar),k.renderer(s)}));const f=new a(".popup_type_edit-profile",(function(e,t){d.updateUserInfo(e).then((()=>{m.setUserInfo(e),f.close()})).finally((()=>t.textContent="Save"))}));f.setEventListeners();const y=new o(_,".popup__form_type_edit-profile");y.enableValidation(),h.addEventListener("click",(()=>{y.resetValidation(),m.setUserInfo(m.getUserInfo()),f.open()}));const b=new a(".popup_type_edit-avatar",(function(e,t){d.setUserAvatar(e).then((()=>{m.setUserAvatar(e),b.close()})).finally((()=>t.textContent="Save"))}));b.setEventListeners();const g=new o(_,".popup__form_type_edit-avatar");g.enableValidation(),u.addEventListener("click",(()=>{g.resetValidation(),b.open()}));const C=new class extends n{constructor(e,t,s){super(e),this._source=t,this._caption=s}open(e){super.open(),this._source=e.link,this._caption=e.name,this._popupImage=this._popup.querySelector(".picture-popup__popup-image"),this._popupCaption=this._popup.querySelector(".picture-popup__popup-text"),this._popupImage.src=this._source,this._popupImage.alt=this._caption,this._popupCaption.textContent=this._caption}}(".picture-popup"," "," ");C.setEventListeners();const E=new class extends n{getTask(e){this._handleFormSubmit=e}setEventListeners(){super.setEventListeners(),this._popupForm=this._popup.querySelector(".popup__form"),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(),this.close()}))}}(".popup_type_delete-card");E.setEventListeners();const L=e=>{const t=new r(e,v,"card-template",(()=>{C.open(e)}),(e=>{E.open(),E.getTask((()=>{d.deleteCard(e),t.deleteCard()}))}),(e=>{t.isCardLiked()?d.removeLike(e).then((e=>{t.removeLike(e)})):d.addLike(e).then((e=>{t.likeCard(e)}))})),s=t.generateCard();k.addItem(s)},k=new class{constructor(e,t){this._renderItem=e,this._container=document.querySelector(t)}renderer(e){e.forEach((e=>{this._renderItem(e)}))}addItem(e){this._container.prepend(e)}}(L,".photos-grid__list"),S=new a(".popup_type_add-card",(function(e,t){d.setNewCard(e).then((e=>{L(e),S.close()})).finally((()=>t.textContent="Create"))}));S.setEventListeners(),p.addEventListener("click",(()=>{I.resetValidation(),S.open()}));const I=new o(_,".popup__form_type_add-card");I.enableValidation()}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,