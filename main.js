!function(){"use strict";var t={717:function(t,e,s){t.exports=s.p+"a086f758840ae814ecde.svg"}},e={};function s(i){var r=e[i];if(void 0!==r)return r.exports;var n=e[i]={exports:{}};return t[i](n,n.exports,s),n.exports}s.p="",function(){var t=s(717);class e{constructor(t,e,s,i,r,n){var o,a;a=t=>{this._likes=t.likes,this._likeButton.classList.toggle("heart_active"),this._likesCounter.textContent=t.likes.length},(o="updateLikes")in this?Object.defineProperty(this,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):this[o]=a,this._text=t.name,this._link=t.link,this._id=t._id,this._likes=t.likes,this._likesCount=t.likes.length,this._owner=t.owner._id,this._user=e,this._template=document.getElementById(s),this._handleCardClick=i,this._handleDeleteCard=r,this._handleLikeButton=n}_getCardData(){return this._template.content.querySelector(".photos-grid__card").cloneNode(!0)}isCardLiked(){return this._likes.some((t=>t._id===this._user))}generateCard(){return this._element=this._getCardData(),this._cardPhoto=this._element.querySelector(".photos-grid__photo"),this._cardCaption=this._element.querySelector(".photos-grid__location"),this._likesCounter=this._element.querySelector(".photos-grid__like-counter"),this._trashIcon=this._element.querySelector(".photos-grid__trash"),this._likeButton=this._element.querySelector(".heart"),this._likesCounter.textContent=this._likesCount,this._cardPhoto.src=this._link,this._cardPhoto.alt=this._text,this._cardCaption.textContent=this._text,this._owner!==this._user&&this._trashIcon.classList.add("photos-grid__trash_disables"),this.isCardLiked()&&this._likeButton.classList.add("heart_active"),this._setEventListeners(),this._element}_setEventListeners(){this._likeButton.addEventListener("click",(()=>this._handleLikeButton(this._id))),this._trashIcon.addEventListener("click",(()=>this._handleDeleteCard(this._id))),this._cardPhoto.addEventListener("click",this._handleCardClick)}deleteCardElement(){this._element.remove(),this._element=null}}class i{constructor(t,e){this._config=t,this._form=document.querySelector(e)}enableValidation(){this._inputList=[...this._form.querySelectorAll(this._config.inputSelector)],this._buttonElement=this._form.querySelector(this._config.submitButtonSelector),this._form.addEventListener("submit",(function(t){t.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((t=>{this._hideInputError(t)}))}_showInputError(t){const e=this._form.querySelector(".".concat(t.id,"-error"));t.classList.add(this._config.inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._config.errorClass)}_hideInputError(t){const e=this._form.querySelector(".".concat(t.id,"-error"));t.classList.remove(this._config.inputErrorClass),e.classList.remove(this._config.errorClass),e.textContent=""}_checkInputValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}_hasInvalidInput(){return this._inputList.some((t=>!t.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._config.inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._config.inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this._toggleButtonState()}))}))}}function r(t,e,s){return e in t?Object.defineProperty(t,e,{value:s,enumerable:!0,configurable:!0,writable:!0}):t[e]=s,t}class n{constructor(t){r(this,"_handleEscClose",(t=>{"Escape"===t.key&&this._popup.classList.remove("popup_opened")})),r(this,"_handleClickOverlayClose",(t=>{t.target==t.currentTarget&&this.close()})),this._popup=document.querySelector(t)}open(){this._popup.classList.add("popup_opened"),this._popup.addEventListener("mousedown",this._handleClickOverlayClose),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_opened"),this._popup.removeEventListener("mousedown",this._handleClickOverlayClose),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popup.querySelector(".popup__close-button").addEventListener("click",(()=>this.close()))}}class o extends n{constructor(t,e,s){var i,r;super(t),r=t=>{t.preventDefault(),this._renderLoading(),this._actionsForSubmit(this._getInputValues(),this._button)},(i="_handleFormSubmit")in this?Object.defineProperty(this,i,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[i]=r,this._inputs=this._popup.querySelectorAll(e.inputSelector),this._button=this._popup.querySelector(e.submitButtonSelector),this._actionsForSubmit=s}_getInputValues(){const t={};return this._inputs.forEach((e=>{t[e.name]=e.value})),t}_renderLoading(){this._button.textContent="Saving..."}setEventListeners(){super.setEventListeners(),this._popupForm=this._popup.querySelector(".popup__form"),this._popupForm.addEventListener("submit",this._handleFormSubmit)}close(){this._popupForm.reset(),super.close()}}const a={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_inactive",inputErrorClass:"popup__input_state_error",errorClass:"popup__input-error_active"},h=document.querySelector(".popup__input_type_name"),c=document.querySelector(".popup__input_type_job"),l=document.getElementById("edit-avatar-icon"),_=document.querySelector(".profile__edit-button"),p=document.querySelector(".profile__avatar-cover"),u=document.querySelector(".profile__add-button"),d=new class extends n{getMessage(t,e){this._messageField=this._popup.querySelector(t),this._messageField.textContent=e}setEventListeners(){super.setEventListeners(),this._popupForm=this._popup.querySelector(".popup__form"),this._popupForm.addEventListener("submit",(t=>{t.preventDefault(),this.close()}))}}(".popup_type_error");d.setEventListeners();const m=t=>{console.log("error: ".concat(t)),d.getMessage(".popup__text","error: ".concat(t)),d.open()},v=new class{constructor(t,e){let{baseUrl:s,headers:i}=e;var r,n;n=t=>this._customFetch("".concat(this._baseUrl,"/cards/").concat(t),{method:"DELETE",headers:this._headers}),(r="deleteCard")in this?Object.defineProperty(this,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[r]=n,this._customFetch=t,this._baseUrl=s,this._headers=i}getInitialCards(){return this._customFetch("".concat(this._baseUrl,"/cards"),{headers:this._headers})}getUserInfo(){return this._customFetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}updateUserInfo(t){return this._customFetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t.name,about:t.about})})}setNewCard(t){return this._customFetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t.name,link:t.link})})}addLike(t){return this._customFetch("".concat(this._baseUrl,"/cards/likes/").concat(t),{method:"PUT",headers:this._headers})}removeLike(t){return this._customFetch("".concat(this._baseUrl,"/cards/likes/").concat(t),{method:"DELETE",headers:this._headers})}setUserAvatar(t){return this._customFetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t.avatar})})}}(((t,e)=>fetch(t,e).then((t=>t.ok?t.json():Promise.reject(t.status)))),{baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"3e63b17a-6497-4226-90cf-4d7937b7aba1","Content-Type":"application/json"}});l.src=t;const b=new class{constructor(t,e,s){this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(e),this._avatarElement=document.querySelector(s)}getUserData(){return{name:this._nameElement.textContent,about:this._jobElement.textContent}}setUserData(t){this._nameElement.textContent=t.name,this._jobElement.textContent=t.about}setUserAvatar(t){this._avatarElement.style.backgroundImage="url(".concat(t,")")}}(".profile__name",".profile__title",".profile__avatar");let E;Promise.all([v.getUserInfo(),v.getInitialCards()]).then((t=>{let[e,s]=t;E=e._id,b.setUserData(e),b.setUserAvatar(e.avatar),I.renderer(s)})).catch((t=>m(t)));const f=new o(".popup_type_edit-profile",a,(function(t,e){v.updateUserInfo(t).then((t=>{b.setUserData(t)})).then((()=>f.close())).catch((t=>m(t))).finally((()=>e.textContent="Save"))}));f.setEventListeners();const g=new i(a,".popup__form_type_edit-profile");g.enableValidation(),_.addEventListener("click",(()=>{g.resetValidation();const t=b.getUserData();h.value=t.name,c.value=t.about,f.open()}));const y=new o(".popup_type_edit-avatar",a,(function(t,e){v.setUserAvatar(t).then((t=>{b.setUserAvatar(t.avatar)})).then((()=>y.close())).catch((t=>m(t))).finally((()=>e.textContent="Save"))}));y.setEventListeners();const C=new i(a,".popup__form_type_edit-avatar");C.enableValidation(),p.addEventListener("click",(()=>{C.resetValidation(),y.open()}));const L=new class extends n{constructor(t,e,s){super(t),this._source=e,this._caption=s,this._popupImage=this._popup.querySelector(".picture-popup__popup-image"),this._popupCaption=this._popup.querySelector(".picture-popup__popup-text")}open(t){super.open(),this._source=t.link,this._caption=t.name,this._popupImage.src=this._source,this._popupImage.alt=this._caption,this._popupCaption.textContent=this._caption}}(".picture-popup"," "," ");L.setEventListeners();const k=new class extends n{setSubmitHandler(t){this._handleFormSubmit=t}setEventListeners(){super.setEventListeners(),this._popupForm=this._popup.querySelector(".popup__form"),this._popupForm.addEventListener("submit",(t=>{t.preventDefault(),this._handleFormSubmit()}))}}(".popup_type_delete-card");k.setEventListeners();const S=t=>{const s=new e(t,E,"card-template",(()=>{L.open(t)}),(t=>{k.open(),k.setSubmitHandler((()=>{v.deleteCard(t).then((()=>s.deleteCardElement())).then((()=>k.close())).catch((t=>m(t)))}))}),(t=>{s.isCardLiked()?v.removeLike(t).then((t=>{s.updateLikes(t)})).catch((t=>m(t))):v.addLike(t).then((t=>{s.updateLikes(t)})).catch((t=>m(t)))})),i=s.generateCard();I.addItem(i)},I=new class{constructor(t,e){this._renderItem=t,this._container=document.querySelector(e)}renderer(t){t.forEach((t=>{this._renderItem(t)}))}addItem(t){this._container.prepend(t)}}(S,".photos-grid__list"),q=new o(".popup_type_add-card",a,(function(t,e){v.setNewCard(t).then((t=>{S(t)})).then((()=>q.close())).catch((t=>m(t))).finally((()=>e.textContent="Create"))}));q.setEventListeners(),u.addEventListener("click",(()=>{x.resetValidation(),q.open()}));const x=new i(a,".popup__form_type_add-card");x.enableValidation()}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,